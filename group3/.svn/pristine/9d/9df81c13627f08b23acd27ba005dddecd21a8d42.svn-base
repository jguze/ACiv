/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package civ.UI;


import civ.Unit;
import civ.engine.GameEngine;
import civ.engine.WindowHandler;
import java.awt.*;
import java.awt.event.WindowEvent;
import javax.swing.*;
import java.util.ArrayList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;


/**
 *
 * @author Mikko Sanchez =D
 */
public class UnitSelectView extends JFrame implements ListSelectionListener
{
    
    
    private Container cp;
    private JList list;
    
    private int IndexOfSelectedUnit;
    
    
    
    public UnitSelectView(ArrayList<Unit> units, GameEngine gameEngine){
        super("Unit Selection");
        int i;
        String UnitList[] = new String[units.size()];
        for(i = 0; i < units.size(); i++){
            UnitList[i] = units.get(i).getUnitType().toString();
        }
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        cp = getContentPane();
        cp.setLayout(new GridBagLayout());
        cp.setBackground(Color.BLUE);
        cp.setPreferredSize(new Dimension(130,200));
        
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(
                Color.BLACK, WIDTH), "Select a Unit:"));
        panel.setBackground(Color.LIGHT_GRAY);
        panel.setPreferredSize(new Dimension(130,200));
        panel.setSize(298,298);
        panel.setVisible(true);
        
        this.list = new JList(UnitList);
        this.list.setSize(new Dimension(298,298));
        this.list.setVisibleRowCount(9);
        
        JScrollPane scrollPane = new JScrollPane(list);
        scrollPane.setSize(100,300);
        list.addListSelectionListener(this);
        
        panel.add(scrollPane);
        cp.add(panel);
        this.setVisible(true);
        this.setResizable(false);
        this.setSize(100,90);
        this.pack();
        this.addWindowListener(new WindowHandler(gameEngine));
        
    }
    
    public void isUnitSelected(ListSelectionEvent event){
        if(!event.getValueIsAdjusting()){
            IndexOfSelectedUnit = list.getSelectedIndex();
            this.dispose();
        }
            
    }
    
    public int getIndexOfSelectedUnit(){
        return IndexOfSelectedUnit;
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if(!e.getValueIsAdjusting()){
            IndexOfSelectedUnit = list.getSelectedIndex();
            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }
    
    
    
    }
    
    
//    private class JavaRendererMikkosan extends DefaultListCellRenderer {
//        public Component getListCellRendererComponent(JList list,
//                                                Object value,
//                                                int index,
//                                                boolean isSelected,
//                                                boolean hasFocus) {
//            
//            
//      JLabel label =
//      (JLabel)super.getListCellRendererComponent(list, value, index, isSelected, hasFocus); 
//            label.setIcon(new Icon(gameEngine.))
//            return null;
//        }
//    }
}
    
